<type>[optional scope]: <short description>

[optional body]

[optional footer(s)]


1. <type> (Mandatory)
Indicates the purpose of the commit. Use one of these standardized types:

    feat: A new feature
    fix: A bug fix
    docs: Documentation-only changes
    style: Changes that do not affect code functionality (e.g., formatting)
    refactor: Code changes that neither fix a bug nor add a feature
    test: Adding or modifying tests
    chore: Maintenance tasks (e.g., updating build tools, CI configuration)

2. [optional scope]

Specifies what part of the project is affected (e.g., api, auth, ui). This is optional but helpful in larger projects.

Example: feat(auth): Add login functionality
3. <short description> (Mandatory)

A concise summary (50 characters max) of what the commit does, written in the imperative mood (e.g., "Add feature," not "Added feature").
4. Body (Optional)

Provides more detailed information about what was changed and why. Line breaks every ~72 characters to improve readability.

    When to include:
        If the change is non-trivial or needs explanation
        To describe why the change was made (context)
        Mention how the problem was solved, if necessary

5. Footer(s) (Optional)

Used for referencing issues, breaking changes, or additional context